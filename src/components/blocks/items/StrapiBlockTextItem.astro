---
import type { StrapiBlockTextItem, StrapiBlockTextNodePartial } from '../../../types';

type Props = {
    data: StrapiBlockTextItem;
    theme: StrapiBlockTextNodePartial;
};

const { data, theme = {} as StrapiBlockTextNodePartial } = Astro.props;
const { text, italic, bold, underline, strikethrough } = data;

const tags = [];
let classes: Array<string> = [];

if (italic) {
    tags.push('em');
    classes = [...theme.italic];
}
if (bold) {
    tags.push('strong');
    classes = [...theme.strong];
}
if (underline) {
    tags.push('u');
    classes = [...theme.underline];
}
if (strikethrough) {
    tags.push('s');
    classes = [...theme.strikethrough];
}

const renderTagsStack = (text: string, tags: Array<string>) => {
    if (tags.length === 0) {
        return text;
    }
    return tags.reduce((acc, tag) => {
        return `<${tag} class="${classes?.join(' ')}">${acc}</${tag}>`;
    }, text);
};

---
<span class={theme.span?.join(' ')} set:html={renderTagsStack(text, tags)} />
