---
import { sanitizeStrapiNodeData } from '../../lib/strapi';
import { renderClasses } from '../../lib/utils';
import type { StrapiBlockNode, StrapiBlockTextItem } from '../../types/strapi';

type Props = {
    data: Array<StrapiBlockNode>;
    class?: string;
    language: string;
}

const { data, class: classes = '', language } = Astro.props;

const defaultClasses = [
    'mb-4',
    'bg-gray-200',
    'p-4',
    'rounded-md',
    'text-sm',
    'font-mono',
    'last:mb-0',
];
const blockClasses = [...(Array.isArray(classes) ? classes : classes.split(' '))];
const codeBlockClasses = [...defaultClasses, ...blockClasses];
const languageAllowed = language && (language !== 'plaintext');

const sanitizedData = sanitizeStrapiNodeData(data);

---
{ sanitizedData.length && (<div class={renderClasses(codeBlockClasses)}>
    { languageAllowed && (<div class="text-sm mb-2 text-gray-900"><strong>{language.charAt(0).toUpperCase() + language.slice(1)}</strong></div>) }
    <pre>{sanitizedData.map((item) => (item as StrapiBlockTextItem).text).join('\n')}</pre>
</div>)}